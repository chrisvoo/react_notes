{"ast":null,"code":"import { ActionTypes, DataTypes } from './Types';\nimport RestDataSource from './RestDataSource';\nconst dataSource = new RestDataSource();\nexport const setPageSize = newSize => ({\n  type: ActionTypes.DATA_SET_PAGESIZE,\n  payload: newSize\n});\nexport const setSortProperty = newProp => ({\n  type: ActionTypes.DATA_SET_SORT_PROPERTY,\n  payload: newProp\n});\nexport const placeOrder = order => ({\n  type: ActionTypes.DATA_STORE,\n  payload: dataSource.StoreData(DataTypes.ORDERS, order).then(response => ({\n    dataType: DataTypes.ORDERS,\n    data: response.data\n  }))\n});\n/**\n * the only requirement for the objects produced by action creators is they must have a\n * type property whose value specifies the type of change required to the data store.\n */\n\nexport const loadData = (dataType, params) => ({\n  type: ActionTypes.DATA_LOAD,\n  payload: dataSource.GetData(dataType, params).then(response => ({\n    dataType,\n    data: response.data,\n    total: Number(response.headers['x-total-count']),\n    params\n  })) // it provides the data to be added to the data store.\n\n});","map":{"version":3,"sources":["/home/ccastelli/Documents/experiments/react_notes/sports_store/src/data/ActionCreators.js"],"names":["ActionTypes","DataTypes","RestDataSource","dataSource","setPageSize","newSize","type","DATA_SET_PAGESIZE","payload","setSortProperty","newProp","DATA_SET_SORT_PROPERTY","placeOrder","order","DATA_STORE","StoreData","ORDERS","then","response","dataType","data","loadData","params","DATA_LOAD","GetData","total","Number","headers"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,SAAvC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,UAAU,GAAG,IAAID,cAAJ,EAAnB;AAEA,OAAO,MAAME,WAAW,GAAIC,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAEN,WAAW,CAACO,iBAApB;AAAuCC,EAAAA,OAAO,EAAEH;AAAhD,CAAd,CAApB;AAEP,OAAO,MAAMI,eAAe,GAAIC,OAAD,KAAc;AAAEJ,EAAAA,IAAI,EAAEN,WAAW,CAACW,sBAApB;AAA4CH,EAAAA,OAAO,EAAEE;AAArD,CAAd,CAAxB;AAEP,OAAO,MAAME,UAAU,GAAIC,KAAD,KAAY;AACpCP,EAAAA,IAAI,EAAEN,WAAW,CAACc,UADkB;AAEpCN,EAAAA,OAAO,EAAEL,UAAU,CAACY,SAAX,CAAqBd,SAAS,CAACe,MAA/B,EAAuCH,KAAvC,EAA8CI,IAA9C,CAAoDC,QAAD,KAAe;AACzEC,IAAAA,QAAQ,EAAElB,SAAS,CAACe,MADqD;AAEzEI,IAAAA,IAAI,EAAEF,QAAQ,CAACE;AAF0D,GAAf,CAAnD;AAF2B,CAAZ,CAAnB;AAQP;;;;;AAIA,OAAO,MAAMC,QAAQ,GAAG,CAACF,QAAD,EAAWG,MAAX,MAAuB;AAC7ChB,EAAAA,IAAI,EAAEN,WAAW,CAACuB,SAD2B;AAE7Cf,EAAAA,OAAO,EAAEL,UAAU,CAACqB,OAAX,CAAmBL,QAAnB,EAA6BG,MAA7B,EAAqCL,IAArC,CAA2CC,QAAD,KAAe;AAChEC,IAAAA,QADgE;AAEhEC,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAFiD;AAGhEK,IAAAA,KAAK,EAAEC,MAAM,CAACR,QAAQ,CAACS,OAAT,CAAiB,eAAjB,CAAD,CAHmD;AAIhEL,IAAAA;AAJgE,GAAf,CAA1C,CAFoC,CAOxC;;AAPwC,CAAvB,CAAjB","sourcesContent":["import { ActionTypes, DataTypes } from './Types';\nimport RestDataSource from './RestDataSource';\n\nconst dataSource = new RestDataSource();\n\nexport const setPageSize = (newSize) => ({ type: ActionTypes.DATA_SET_PAGESIZE, payload: newSize });\n\nexport const setSortProperty = (newProp) => ({ type: ActionTypes.DATA_SET_SORT_PROPERTY, payload: newProp });\n\nexport const placeOrder = (order) => ({\n  type: ActionTypes.DATA_STORE,\n  payload: dataSource.StoreData(DataTypes.ORDERS, order).then((response) => ({\n    dataType: DataTypes.ORDERS,\n    data: response.data,\n  })),\n});\n\n/**\n * the only requirement for the objects produced by action creators is they must have a\n * type property whose value specifies the type of change required to the data store.\n */\nexport const loadData = (dataType, params) => ({\n  type: ActionTypes.DATA_LOAD,\n  payload: dataSource.GetData(dataType, params).then((response) => ({\n    dataType,\n    data: response.data,\n    total: Number(response.headers['x-total-count']),\n    params,\n  })), // it provides the data to be added to the data store.\n});\n"]},"metadata":{},"sourceType":"module"}