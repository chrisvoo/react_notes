{"ast":null,"code":"import _defineProperty from \"/home/ccastelli/Documents/experiments/react_notes/sports_store/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setPageSize, setSortProperty } from '../data/ActionCreators';\n\nconst mapStateToProps = dataStore => dataStore;\n\nconst mapDispatchToProps = {\n  setPageSize,\n  setSortProperty\n};\n\nconst mergeProps = (dataStore, actionCreators, router) => _objectSpread({}, dataStore, {}, router, {}, actionCreators, {\n  currentPage: Number(router.match.params.page),\n  pageCount: Math.ceil((dataStore.products_total | dataStore.pageSize || 5) / (dataStore.pageSize || 5)),\n  navigateToPage: page => router.history.push(\"/shop/products/\".concat(router.match.params.category, \"/\").concat(page))\n});\n/**\n * This is a HOC which combines data store properties, action creators, and route parameters to\n * provide the pagination control components with access to the features they require.\n */\n\n\nexport default (PageComponent => withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(PageComponent)));","map":{"version":3,"sources":["/home/ccastelli/Documents/experiments/react_notes/sports_store/src/shop/ProductPageConnector.jsx"],"names":["connect","withRouter","setPageSize","setSortProperty","mapStateToProps","dataStore","mapDispatchToProps","mergeProps","actionCreators","router","currentPage","Number","match","params","page","pageCount","Math","ceil","products_total","pageSize","navigateToPage","history","push","category","PageComponent"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,wBAA7C;;AAEA,MAAMC,eAAe,GAAIC,SAAD,IAAeA,SAAvC;;AACA,MAAMC,kBAAkB,GAAG;AAAEJ,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAA3B;;AACA,MAAMI,UAAU,GAAG,CAACF,SAAD,EAAYG,cAAZ,EAA4BC,MAA5B,uBACdJ,SADc,MAEdI,MAFc,MAGdD,cAHc;AAIjBE,EAAAA,WAAW,EAAEC,MAAM,CAACF,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAoBC,IAArB,CAJF;AAKjBC,EAAAA,SAAS,EAAEC,IAAI,CAACC,IAAL,CAAU,CAACZ,SAAS,CAACa,cAAV,GAA2Bb,SAAS,CAACc,QAArC,IAAiD,CAAlD,KAAwDd,SAAS,CAACc,QAAV,IAAsB,CAA9E,CAAV,CALM;AAMjBC,EAAAA,cAAc,EAAGN,IAAD,IAAUL,MAAM,CAACY,OAAP,CACvBC,IADuB,0BACAb,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAoBU,QADpB,cACgCT,IADhC;AANT,EAAnB;AAUA;;;;;;AAIA,gBAAgBU,aAAD,IAAmBvB,UAAU,CAC1CD,OAAO,CAACI,eAAD,EAAkBE,kBAAlB,EAAsCC,UAAtC,CAAP,CAAyDiB,aAAzD,CAD0C,CAA5C","sourcesContent":["import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setPageSize, setSortProperty } from '../data/ActionCreators';\n\nconst mapStateToProps = (dataStore) => dataStore;\nconst mapDispatchToProps = { setPageSize, setSortProperty };\nconst mergeProps = (dataStore, actionCreators, router) => ({\n  ...dataStore,\n  ...router,\n  ...actionCreators,\n  currentPage: Number(router.match.params.page),\n  pageCount: Math.ceil((dataStore.products_total | dataStore.pageSize || 5) / (dataStore.pageSize || 5)),\n  navigateToPage: (page) => router.history\n    .push(`/shop/products/${router.match.params.category}/${page}`),\n});\n\n/**\n * This is a HOC which combines data store properties, action creators, and route parameters to\n * provide the pagination control components with access to the features they require.\n */\nexport default (PageComponent) => withRouter(\n  connect(mapStateToProps, mapDispatchToProps, mergeProps)(PageComponent),\n);\n"]},"metadata":{},"sourceType":"module"}