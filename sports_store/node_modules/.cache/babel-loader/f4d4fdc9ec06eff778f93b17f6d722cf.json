{"ast":null,"code":"import { ActionTypes } from './Types';\nimport RestDataSource from './RestDataSource';\nconst dataSource = new RestDataSource();\nexport const setPageSize = newSize => ({\n  type: ActionTypes.DATA_SET_PAGESIZE,\n  payload: newSize\n});\nexport const setSortProperty = newProp => ({\n  type: ActionTypes.DATA_SET_SORT_PROPERTY,\n  payload: newProp\n});\n/**\n * the only requirement for the objects produced by action creators is they must have a\n * type property whose value specifies the type of change required to the data store.\n */\n\nexport const loadData = (dataType, params) => ({\n  type: ActionTypes.DATA_LOAD,\n  payload: dataSource.GetData(dataType, params).then(response => ({\n    dataType,\n    data: response.data,\n    total: Number(response.headers['x-total-count']),\n    params\n  })) // it provides the data to be added to the data store.\n\n});","map":{"version":3,"sources":["/home/ccastelli/Documents/experiments/react_notes/sports_store/src/data/ActionCreators.js"],"names":["ActionTypes","RestDataSource","dataSource","setPageSize","newSize","type","DATA_SET_PAGESIZE","payload","setSortProperty","newProp","DATA_SET_SORT_PROPERTY","loadData","dataType","params","DATA_LOAD","GetData","then","response","data","total","Number","headers"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,UAAU,GAAG,IAAID,cAAJ,EAAnB;AAEA,OAAO,MAAME,WAAW,GAAIC,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAEL,WAAW,CAACM,iBAApB;AAAuCC,EAAAA,OAAO,EAAEH;AAAhD,CAAd,CAApB;AAEP,OAAO,MAAMI,eAAe,GAAIC,OAAD,KAAc;AAAEJ,EAAAA,IAAI,EAAEL,WAAW,CAACU,sBAApB;AAA4CH,EAAAA,OAAO,EAAEE;AAArD,CAAd,CAAxB;AAEP;;;;;AAIA,OAAO,MAAME,QAAQ,GAAG,CAACC,QAAD,EAAWC,MAAX,MAAuB;AAC7CR,EAAAA,IAAI,EAAEL,WAAW,CAACc,SAD2B;AAE7CP,EAAAA,OAAO,EAAEL,UAAU,CAACa,OAAX,CAAmBH,QAAnB,EAA6BC,MAA7B,EAAqCG,IAArC,CAA2CC,QAAD,KAAe;AAChEL,IAAAA,QADgE;AAEhEM,IAAAA,IAAI,EAAED,QAAQ,CAACC,IAFiD;AAGhEC,IAAAA,KAAK,EAAEC,MAAM,CAACH,QAAQ,CAACI,OAAT,CAAiB,eAAjB,CAAD,CAHmD;AAIhER,IAAAA;AAJgE,GAAf,CAA1C,CAFoC,CAOxC;;AAPwC,CAAvB,CAAjB","sourcesContent":["import { ActionTypes } from './Types';\nimport RestDataSource from './RestDataSource';\n\nconst dataSource = new RestDataSource();\n\nexport const setPageSize = (newSize) => ({ type: ActionTypes.DATA_SET_PAGESIZE, payload: newSize });\n\nexport const setSortProperty = (newProp) => ({ type: ActionTypes.DATA_SET_SORT_PROPERTY, payload: newProp });\n\n/**\n * the only requirement for the objects produced by action creators is they must have a\n * type property whose value specifies the type of change required to the data store.\n */\nexport const loadData = (dataType, params) => ({\n  type: ActionTypes.DATA_LOAD,\n  payload: dataSource.GetData(dataType, params).then((response) => ({\n    dataType,\n    data: response.data,\n    total: Number(response.headers['x-total-count']),\n    params,\n  })), // it provides the data to be added to the data store.\n});\n"]},"metadata":{},"sourceType":"module"}